task bundleZip(type: Zip) {
    archiveFileName = 'modules.zip'
    destinationDirectory = file("$buildDir")
}

if (!project.tasks.findByName('assemble')) {
    task assemble {
    }
}

if (!project.tasks.findByName('build')) {
    task build {
    }
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'

    shadowJar {
        classifier = null
        configurations = [project.configurations.runtimeClasspath] //TODO: Zaxar163 check this
        exclude 'module-info.class'
    }

    parent.tasks.bundleZip.dependsOn tasks.shadowJar
    parent.tasks.bundleZip.from tasks.shadowJar
}

configure(subprojects.findAll { it.name.endsWith('_module') }) {
    dependencies {
        implementation project(':LaunchServer')
    }
}

configure(subprojects.findAll { it.name.endsWith('_swmodule') }) {
    dependencies {
        implementation project(':ServerWrapper')
    }
    shadowJar {
        relocate 'io.netty', 'pro.gravit.repackage.io.netty'
    }
}

configure(subprojects.findAll { it.name.endsWith('_lmodule') }) {
    dependencies {
        implementation project(':Launcher')
    }
    shadowJar {
        relocate 'org.objectweb.asm', 'pro.gravit.repackage.org.objectweb.asm'
        relocate 'io.netty', 'pro.gravit.repackage.io.netty'
    }
}

project.tasks.findByName('assemble').dependsOn tasks.bundleZip
project.tasks.findByName('build').dependsOn project.tasks.findByName('assemble')